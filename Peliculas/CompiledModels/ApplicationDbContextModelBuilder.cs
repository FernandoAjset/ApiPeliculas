// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Peliculas.CompiledModels
{
    public partial class ApplicationDbContextModel
    {
        partial void Initialize()
        {
            var generoPelicula = GeneroPeliculaEntityType.Create(this);
            var actor = ActorEntityType.Create(this);
            var direccion = DireccionEntityType.Create(this);
            var cine = CineEntityType.Create(this);
            var direccion0 = Direccion0EntityType.Create(this);
            var cineDetalle = CineDetalleEntityType.Create(this);
            var cineOferta = CineOfertaEntityType.Create(this);
            var genero = GeneroEntityType.Create(this);
            var log = LogEntityType.Create(this);
            var pago = PagoEntityType.Create(this);
            var pelicula = PeliculaEntityType.Create(this);
            var peliculaActor = PeliculaActorEntityType.Create(this);
            var producto = ProductoEntityType.Create(this);
            var salaDeCine = SalaDeCineEntityType.Create(this);
            var cineSinUbicacion = CineSinUbicacionEntityType.Create(this);
            var peliculasConConteos = PeliculasConConteosEntityType.Create(this);
            var peliculaSalaDeCine = PeliculaSalaDeCineEntityType.Create(this);
            var merchandising = MerchandisingEntityType.Create(this, producto);
            var pagoPaypal = PagoPaypalEntityType.Create(this, pago);
            var pagoTarjeta = PagoTarjetaEntityType.Create(this, pago);
            var peliculaAlquilable = PeliculaAlquilableEntityType.Create(this, producto);

            GeneroPeliculaEntityType.CreateForeignKey1(generoPelicula, genero);
            GeneroPeliculaEntityType.CreateForeignKey2(generoPelicula, pelicula);
            DireccionEntityType.CreateForeignKey1(direccion, actor);
            Direccion0EntityType.CreateForeignKey1(direccion0, cine);
            CineDetalleEntityType.CreateForeignKey1(cineDetalle, cine);
            CineOfertaEntityType.CreateForeignKey1(cineOferta, cine);
            PeliculaActorEntityType.CreateForeignKey1(peliculaActor, actor);
            PeliculaActorEntityType.CreateForeignKey2(peliculaActor, pelicula);
            SalaDeCineEntityType.CreateForeignKey1(salaDeCine, cine);
            PeliculaSalaDeCineEntityType.CreateForeignKey1(peliculaSalaDeCine, pelicula);
            PeliculaSalaDeCineEntityType.CreateForeignKey2(peliculaSalaDeCine, salaDeCine);
            MerchandisingEntityType.CreateForeignKey1(merchandising, producto);
            PeliculaAlquilableEntityType.CreateForeignKey1(peliculaAlquilable, producto);

            GeneroEntityType.CreateSkipNavigation1(genero, pelicula, generoPelicula);
            PeliculaEntityType.CreateSkipNavigation1(pelicula, genero, generoPelicula);
            PeliculaEntityType.CreateSkipNavigation2(pelicula, salaDeCine, peliculaSalaDeCine);
            SalaDeCineEntityType.CreateSkipNavigation1(salaDeCine, pelicula, peliculaSalaDeCine);

            GeneroPeliculaEntityType.CreateAnnotations(generoPelicula);
            ActorEntityType.CreateAnnotations(actor);
            DireccionEntityType.CreateAnnotations(direccion);
            CineEntityType.CreateAnnotations(cine);
            Direccion0EntityType.CreateAnnotations(direccion0);
            CineDetalleEntityType.CreateAnnotations(cineDetalle);
            CineOfertaEntityType.CreateAnnotations(cineOferta);
            GeneroEntityType.CreateAnnotations(genero);
            LogEntityType.CreateAnnotations(log);
            PagoEntityType.CreateAnnotations(pago);
            PeliculaEntityType.CreateAnnotations(pelicula);
            PeliculaActorEntityType.CreateAnnotations(peliculaActor);
            ProductoEntityType.CreateAnnotations(producto);
            SalaDeCineEntityType.CreateAnnotations(salaDeCine);
            CineSinUbicacionEntityType.CreateAnnotations(cineSinUbicacion);
            PeliculasConConteosEntityType.CreateAnnotations(peliculasConConteos);
            PeliculaSalaDeCineEntityType.CreateAnnotations(peliculaSalaDeCine);
            MerchandisingEntityType.CreateAnnotations(merchandising);
            PagoPaypalEntityType.CreateAnnotations(pagoPaypal);
            PagoTarjetaEntityType.CreateAnnotations(pagoTarjeta);
            PeliculaAlquilableEntityType.CreateAnnotations(peliculaAlquilable);

            AddAnnotation("ProductVersion", "6.0.2");
            AddAnnotation("Relational:MaxIdentifierLength", 128);
            AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
        }
    }
}
